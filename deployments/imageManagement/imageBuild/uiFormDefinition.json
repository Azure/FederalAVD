{
	"$schema": "https://schema.management.azure.com/schemas/2021-09-09/uiFormDefinition.schema.json",
	"view": {
		"kind": "Form",
		"properties": {
			"title": "AVD Custom Image Build",
			"steps": [
				{
					"name": "basics",
					"label": "Deployment Basics",
					"elements": [
						{
							"name": "subscriptionsApi",
							"type": "Microsoft.Solutions.ArmApiControl",
							"request": {
								"method": "GET",
								"path": "/subscriptions?api-version=2022-12-01"
							}
						},
						{
							"name": "infoPreReq",
							"type": "Microsoft.Common.TextBlock",
							"visible": true,
							"options": {
								"text": "This solution can be used to create a custom image for Azure Virtual Desktop which will then be distributed to a compute gallery of your choosing."
							}
						},
						{
							"name": "meApi",
							"type": "Microsoft.Solutions.GraphApiControl",
							"request": {
								"method": "GET",
								"path": "/v1.0/me",
								"transforms": {
									"context": "\"@odata.context\""
								}
							}
						},						
						{
							"name": "scope",
							"type": "Microsoft.Common.ResourceScope",
							"instanceDetailsLabel": "Image Build Location",
							"location": {
								"label": "Default Image Version Region",
								"resourceTypes": [
									"Microsoft.Compute/virtualmachines"
								]
							}
						},
						{
							"name": "resGroup",
							"type": "Microsoft.Common.Section",
							"label": "Image Build Resource Group",
							"elements": [
								{
									"name": "useExResGroup",
									"type": "Microsoft.Common.OptionsGroup",
									"label": "Use Existing Resource Group",
									"defaultValue": "Yes",
									"toolTip": "",
									"constraints": {
										"allowedValues": [
											{
												"label": "Yes",
												"value": true
											},
											{
												"label": "No",
												"value": false
											}
										],
										"required": false
									}
								},
								{
									"name": "resourceGroupsApi",
									"type": "Microsoft.Solutions.ArmApiControl",
									"condition": "[not(empty(steps('basics').scope.subscription))]",
									"request": {
										"method": "GET",
										"path": "[concat(steps('basics').scope.subscription.id, '/resourceGroups?api-version=2021-04-01')]"
									}
								},
								{
									"name": "resourceGroup",
									"type": "Microsoft.Common.DropDown",
									"label": "Resource Group (for Image Build resources)",
									"toolTip": "Select the name of the existing resource group where the image build virtual machines and associated resources will be created.",
									"constraints": {
										"allowedValues": "[map(steps('basics').resGroup.resourceGroupsApi.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.name, '\"}')))]",
										"required": true
									},
									"visible": "[equals(steps('basics').resGroup.useExResGroup, true)]"
								},
								{
									"name": "customBuildResourceGroupName",
									"type": "Microsoft.Common.TextBox",
									"label": "Custom Build Resource Group Name",
									"subLabel": "Leave blank if you want to allow this deployment to create a resource group automatically named with CAF principals.",
									"placeholder": "rg-image-build-resources-<environment>-<location>",
									"toolTip": "The custom name of the resource group where the image build and management vms will be created.",
									"constraints": {
										"required": false,
										"regex": "^[a-z0-9A-Z-]{2,90}$",
										"validationMessage": "If provided the value must be between 2 and 90 characters."
									},
									"visible": "[equals(steps('basics').resGroup.useExResGroup, false)]"
								}
							]
						},
						{
							"name": "virtualNetworksApi",
							"type": "Microsoft.Solutions.ArmApiControl",
							"condition": "[not(empty(steps('basics').scope.subscription))]",
							"request": {
								"method": "GET",
								"path": "[concat(steps('basics').scope.subscription.id, '/providers/Microsoft.Network/virtualNetworks?api-version=2022-11-01')]"
							}
						},
						{
							"name": "computeApi",
							"type": "Microsoft.Solutions.ArmApiControl",
							"condition": "[not(empty(steps('basics').scope.subscription))]",
							"request": {
								"method": "GET",
								"path": "[concat(steps('basics').scope.subscription.id,'/providers/Microsoft.Compute/resourceTypes?api-version=2021-04-01')]"
							}
						},
						{
							"name": "locationsApi",
							"type": "Microsoft.Solutions.ArmApiControl",
							"condition": "[not(empty(steps('basics').scope.subscription))]",
							"request": {
								"method": "GET",
								"path": "[concat(steps('basics').scope.subscription.id,'/locations?api-version=2020-01-01')]"
							}
						},
						{
							"name": "storageApi",
							"type": "Microsoft.Solutions.ArmApiControl",
							"condition": "[not(empty(steps('basics').scope.subscription))]",
							"request": {
								"method": "GET",
								"path": "[concat(steps('basics').scope.subscription.id,'/providers/Microsoft.Storage/resourceTypes?api-version=2021-04-01')]"
							}
						},
						{
							"name": "naming",
							"type": "Microsoft.Common.Section",
							"visible": true,
							"label": "Naming",
							"elements": [
								{
									"name": "deploymentPrefix",
									"type": "Microsoft.Common.TextBox",
									"label": "Deployment Prefix",
									"subLabel": "",
									"placeholder": "imgbld",
									"toolTip": "Optionally, provide a prefix (from 2 to 6 characters) for the deployments created by this template.",
									"constraints": {
										"required": false,
										"regex": "^[a-z0-9A-Z-]{2,6}$",
										"validationMessage": "The prefix must be between 2 and 6 characters"
									}
								},
								{
									"name": "cafTextBlock",
									"type": "Microsoft.Common.TextBlock",
									"visible": true,
									"options": {
										"text": "The Cloud Adoption Framework (CAF) provides a recommended resource naming convention which specifies that the abbreviation for the resource type is listed first in the name. This solution automatically names resources using the CAF naming convention and suggested resource type abbreviations. Some customers have chosen to move the resource type to the end of the resource names. Select 'Yes' below to ensure that resources are named with this reverse convention or leave it set to 'No' to follow the CAF.",
										"link": {
											"label": "Resource Naming | Microsoft Learn",
											"uri": "https://learn.microsoft.com/en-us/azure/cloud-adoption-framework/ready/azure-best-practices/resource-naming"
										}
									}
								},
								{
									"name": "nameConvResTypeAtEnd",
									"type": "Microsoft.Common.OptionsGroup",
									"label": "Move the Resource Type to the end of resource names",
									"defaultValue": "No",
									"toolTip": "",
									"constraints": {
										"allowedValues": [
											{
												"label": "Yes",
												"value": true
											},
											{
												"label": "No",
												"value": false
											}
										],
										"required": true
									},
									"visible": true
								}
							]
						}
					]
				},
				{
					"name": "prereqs",
					"label": "Imaging Prerequisites and Resources",
					"elements": [
						{
							"name": "infoPreReq",
							"type": "Microsoft.Common.InfoBox",
							"options": {
								"style": "Warning",
								"text": "Prior to deployment, make sure you meet the required prerequisites outlined in the required prerequisites section of the Getting Started documentation.",
								"uri": "https://github.com/shawntmeyer/AzureVirtualDesktop/blob/master/docs/quickStart.md#prerequisites"
							}
						},
						{
							"name": "gallery",
							"type": "Microsoft.Common.Section",
							"label": "Azure Compute Gallery",
							"elements": [
								{
									"name": "gallery",
									"type": "Microsoft.Solutions.ResourceSelector",
									"label": "Select the existing Compute Gallery",
									"resourceType": "Microsoft.Compute/galleries"
								}
							]
						},
						{
							"name": "storage",
							"type": "Microsoft.Common.Section",
							"label": "Artifacts Storage",
							"elements": [
								{
									"name": "textBlockZeroTrust1",
									"type": "Microsoft.Common.TextBlock",
									"visible": true,
									"options": {
										"text": "This solution fully supports the Zero Trust approach to security. If you wish to follow this approach, you must keep all your artifacts (i.e., scripts, installers, etc.) on an internal trusted storage location such as Azure Blob Storage. In addition, the storage account must have private endpoints configured and only be accessible through a user assigned identity.",
										"link": {
											"label": "Zero Trust security in Azure",
											"uri": "https://learn.microsoft.com/en-us/azure/security/fundamentals/zero-trust"
										}
									}
								},
								{
									"name": "infoBoxZeroTrust",
									"type": "Microsoft.Common.InfoBox",
									"visible": true,
									"options": {
										"style": "Info",
										"text": "The repo containing this solution, includes an automated script and supporting artifacts to configure the storage account, blob container, managed identity, and upload the required artifacts to the storage account.",
										"uri": "https://github.com/shawntmeyer/AzureVirtualDesktop/blob/master/docs/avd.md#deploy-image-management-resources"
									}
								},
								{
									"name": "textBlockZeroTrust3",
									"type": "Microsoft.Common.TextBlock",
									"visible": true,
									"options": {
										"text": "Select the check box below to enable Zero Trust and select the storage account, blob container, and user assigned identity that has been assigned the 'Storage Blob Data Reader' role the storage account.<br/><br/>The User Assigned Identity will be assigned the Contributor and Storage Blob Data Contributor roles on the Build Resource Group in order to support logging and deployment cleanup."
									}
								},
								{
									"name": "enableZeroTrustStorage",
									"type": "Microsoft.Common.CheckBox",
									"defaultValue": true,
									"label": "Enable Zero Trust Artifacts Storage"
								},
								{
									"name": "storageAccountsApi",
									"type": "Microsoft.Solutions.ArmApiControl",
									"condition": "[steps('prereqs').storage.enableZeroTrustStorage]",
									"request": {
										"method": "GET",
										"path": "[concat(steps('basics').scope.subscription.id, '/providers/Microsoft.Storage/storageAccounts?api-version=2023-01-01')]"
									}
								},
								{
									"name": "storageAccount",
									"type": "Microsoft.Common.DropDown",
									"label": "Image Artifacts Storage Account",
									"multiLine": true,
									"toolTip": "Select the storage account containing the image customization artifacts (i.e., installers, scripts).",
									"constraints": {
										"allowedValues": "[map(steps('prereqs').storage.storageAccountsApi.value, (sa) => parse(concat('{\"label\":\"', sa.name, '\",\"description\":\"<b>Location</b>: ', sa.location, ' <b>Resource Group</b>: ', first(skip(split(sa.id, '/'), 4)), '\",\"value\":{\"id\":\"', sa.id, '\",\"blobEndpoint\":\"', sa.properties.primaryEndpoints.blob, '\"}}')))]",
										"required": true
									},
									"visible": "[steps('prereqs').storage.enableZeroTrustStorage]"
								},
								{
									"name": "containersApi",
									"type": "Microsoft.Solutions.ArmApiControl",
									"condition": "[not(empty(steps('prereqs').storage.storageAccount))]",
									"request": {
										"method": "GET",
										"path": "[concat(steps('prereqs').storage.storageAccount.id, '/blobServices/default/containers?api-version=2023-01-01')]"
									}
								},
								{
									"name": "container",
									"type": "Microsoft.Common.DropDown",
									"label": "Image Artifacts Container",
									"defaultValue": "",
									"toolTip": "Select the container which contains the software and script blobs.",
									"constraints": {
										"required": true,
										"allowedValues": "[map(steps('prereqs').storage.containersApi.value, (container) => parse(concat('{\"label\":\"', container.name, '\",\"value\":\"', container.name, '\"}')))]"
									},
									"visible": "[steps('prereqs').storage.enableZeroTrustStorage]"
								},
								{
									"name": "userAssignedIdentity",
									"type": "Microsoft.Solutions.ResourceSelector",
									"label": "User Assigned Identity",
									"toolTip": "Select an existing User Assigned Identity which has been assigned data plane rights of at least 'Storage Blob Data Reader' to the storage account and container selected above.",
									"resourceType": "Microsoft.ManagedIdentity/userAssignedIdentities",
									"constraints": {
										"required": true
									},
									"visible": "[steps('prereqs').storage.enableZeroTrustStorage]"
								}
							]
						},
						{
							"name": "network",
							"type": "Microsoft.Common.Section",
							"label": "Networking",
							"elements": [
								{
									"name": "textBlockNetwork",
									"type": "Microsoft.Common.TextBlock",
									"visible": true,
									"options": {
										"text": "Select the Virtual Network and Subnet to which the image build virtual machine will be attached. The Virtual Network options listed below are based on the region selected under 'Image Build Location' on the 'Deployment Basics' page. If you don't find the desired virtual network, change the region on the 'Basics' page."
									}
								},
								{
									"name": "warningNetwork",
									"type": "Microsoft.Common.InfoBox",
									"options": {
										"style": "Warning",
										"text": "Virtual machines must be able to resolve the blob private dns zone and route to the storage account endpoint for the storage account selected above. Select the appropriate subnet that meets these requirements."
									},
									"visible": "[steps('prereqs').storage.enableZeroTrustStorage]"
								},
								{
									"name": "virtualNetwork",
									"type": "Microsoft.Solutions.ResourceSelector",
									"label": "Image Capture Virtual Network",
									"resourceType": "Microsoft.Network/virtualNetworks",
									"options": {
										"filter": {
											"subscription": "onBasics",
											"location": "onBasics"
										}
									}
								},
								{
									"name": "subnetsApi",
									"type": "Microsoft.Solutions.ArmApiControl",
									"condition": "[not(empty(steps('prereqs').network.virtualNetwork))]",
									"request": {
										"method": "GET",
										"path": "[concat(steps('prereqs').network.virtualNetwork.id, '/subnets?api-version=2022-05-01')]"
									}
								},
								{
									"name": "subnet",
									"type": "Microsoft.Common.DropDown",
									"visible": true,
									"label": "Image Capture Subnet",
									"defaultValue": "",
									"toolTip": "Select an existing subnet for the image capture.",
									"constraints": {
										"required": true,
										"allowedValues": "[map(steps('prereqs').network.subnetsApi.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.id, '\"}')))]"
									}
								}
							]
						}
					]
				},
				{
					"name": "imageVm",
					"label": "Image Virtual Machine",
					"elements": [
						{
							"name": "vmProps",
							"type": "Microsoft.Common.Section",
							"label": "Virtual Machine Properties",
							"elements": [
								{
									"name": "vmSizesApi",
									"type": "Microsoft.Solutions.ArmApiControl",
									"condition": "[not(empty(steps('basics').scope.subscription))]",
									"request": {
										"method": "GET",
										"path": "[concat(steps('basics').scope.subscription.id, '/providers/Microsoft.Compute/locations/', steps('basics').scope.location.name, '/vmSizes?api-version=2023-03-01')]"
									}
								},
								{
									"name": "vmSize",
									"type": "Microsoft.Compute.SizeSelector",
									"label": "Virtual Machine Size",
									"toolTip": "Select the size of the virtual machines. Multi-session hosts should have 4 - 24 vCPUs. Single session host should have 2 or more vCPUs.",
									"recommendedSizes": [
										"Standard_D4ads_v5",
										"Standard_D8ads_v5",
										"Standard_D16ads_v5"
									],
									"constraints": {
										"allowedSizes": "[map(steps('imageVm').vmProps.vmSizesApi.value, (item) => parse(concat('\"', item.name, '\"')))]"
									},
									"options": {
										"hideDiskTypeFilter": false
									},
									"osPlatform": "Windows",
									"visible": true
								},
								{
									"name": "encryptionAtHost",
									"type": "Microsoft.Common.CheckBox",
									"visible": true,
									"label": "EncryptionAtHost",
									"defaultValue": true,
									"toolTip": "Check to enable 'EncryptionAtHost' for Disk Encryption."
								},
								{
									"name": "warningEncryptionAtHost",
									"type": "Microsoft.Common.InfoBox",
									"visible": "[steps('imageVm').vmProps.encryptionAtHost]",
									"options": {
										"style": "Warning",
										"text": "In order to deploy a virtual machine with Encryption at Host enabled, the feature must be enabled in your subscription.",
										"uri": "https://learn.microsoft.com/en-us/azure/virtual-machines/disks-enable-host-based-encryption-portal?tabs=azure-powershell"
									}
								}
							]
						},
						{
							"name": "imageSource",
							"type": "Microsoft.Common.Section",
							"label": "Image Source Properties",
							"elements": [
								{
									"name": "source",
									"type": "Microsoft.Common.DropDown",
									"label": "Image Source",
									"filter": true,
									"defaultValue": "Marketplace",
									"toolTip": "Select the type of image to deploy on the session hosts.",
									"constraints": {
										"required": true,
										"allowedValues": [
											{
												"label": "Marketplace",
												"value": "marketplace"
											},
											{
												"label": "Compute Gallery",
												"value": "gallery"
											}
										]
									}
								},
								{
									"name": "publisher",
									"type": "Microsoft.Common.DropDown",
									"label": "Publisher",
									"defaultValue": "Microsoft Windows Desktop",
									"constraints": {
										"allowedValues": [
											{
												"label": "Microsoft Windows Desktop",
												"value": "MicrosoftWindowsDesktop"
											},
											{
												"label": "Microsoft Windows Server",
												"value": "MicrosoftWindowsServer"
											}
										],
										"required": false
									},
									"visible": "[equals(steps('imageVm').imageSource.source, 'marketplace')]"
								},
								{
									"name": "offer",
									"type": "Microsoft.Common.DropDown",
									"label": "Offer",
									"defaultValue": "Windows-11",
									"toolTip": "Select the desired marketplace image offer.",
									"constraints": {
										"allowedValues": "[if(equals(steps('imageVm').imageSource.publisher, 'MicrosoftWindowsServer'), parse('[{\"label\":\"WindowsServer\",\"value\":\"WindowsServer\"}]'), parse('[{\"label\":\"Office-365\",\"value\":\"office-365\"},{\"label\":\"Windows-10\",\"value\":\"Windows-10\"},{\"label\":\"Windows-11\",\"value\":\"windows-11\"}]'))]",
										"required": true
									},
									"visible": "[equals(steps('imageVm').imageSource.source, 'marketplace')]"
								},
								{
									"name": "skusApi",
									"type": "Microsoft.Solutions.ArmApiControl",
									"condition": "[not(empty(steps('imageVm').imageSource.offer))]",
									"request": {
										"method": "GET",
										"path": "[concat(steps('basics').scope.subscription.id, '/providers/Microsoft.Compute/locations/', steps('basics').scope.location.name, '/publishers/', steps('imageVm').imageSource.publisher, '/artifacttypes/vmimage/offers/', steps('imageVm').imageSource.offer, '/skus?api-version=2023-07-01')]"
									}
								},
								{
									"name": "sku",
									"type": "Microsoft.Common.DropDown",
									"label": "SKU",
									"defaultValue": "win11-24h2-avd",
									"toolTip": "Select the desired marketplace image SKU.",
									"constraints": {
										"allowedValues": "[if(equals(steps('imageVm').imageSource.publisher, 'MicrosoftWindowsServer'), map(steps('imageVm').imageSource.skusApi, (sku) => parse(concat('{\"label\":\"', sku.name, '\",\"value\":\"', sku.name, '\"}'))), map(filter(steps('imageVm').imageSource.skusApi, (sku) => and(contains(sku.name, 'win'), or(contains(sku.name, '-avd'), contains(sku.name, '-ent')))), (sku) => parse(concat('{\"label\":\"', sku.name, '\",\"value\":\"', sku.name, '\"}'))))]",
										"required": true
									},
									"visible": "[equals(steps('imageVm').imageSource.source, 'marketplace')]"
								},
								{
									"name": "gallery",
									"type": "Microsoft.Solutions.ResourceSelector",
									"label": "Compute gallery",
									"resourceType": "Microsoft.Compute/galleries",
									"visible": "[equals(steps('imageVm').imageSource.source, 'gallery')]"
								},
								{
									"name": "imageDefinitionApi",
									"type": "Microsoft.Solutions.ArmApiControl",
									"condition": "[not(empty(steps('imageVm').imageSource.gallery))]",
									"request": {
										"method": "GET",
										"path": "[concat(steps('imageVm').imageSource.gallery.id, '/images?api-version=2022-03-03')]"
									}
								},
								{
									"name": "imageDefinition",
									"type": "Microsoft.Common.DropDown",
									"label": "Image Definition",
									"defaultValue": "",
									"toolTip": "Select the desired image definition.",
									"constraints": {
										"allowedValues": "[map(steps('imageVm').imageSource.imageDefinitionApi.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.id, '\"}')))]",
										"required": true
									},
									"visible": "[equals(steps('imageVm').imageSource.source, 'gallery')]"
								}
							]
						}
					]
				},
				{
					"name": "imageCustomizations",
					"label": "Image Customizations",
					"elements": [
						{
							"name": "downloadLatestMicrosoftContent",
							"type": "Microsoft.Common.DropDown",
							"label": "Download Microsoft Sources from Web",
							"defaultValue": "[if(steps('prereqs').storage.enableZeroTrustStorage, 'No', 'Yes')]",
							"toolTip": "Select 'Yes' to download the latest sources for FSLogix, M365 Deployment Tool, OneDrive, and Teams from the Web.",
							"constraints": {
								"allowedValues": "[if(steps('prereqs').storage.enableZeroTrustStorage, parse('[{\"label\":\"No\",\"value\":false},{\"label\":\"Yes\",\"value\":true}]'), parse('[{\"label\":\"Yes\",\"value\":true}]'))]"
							}
						},
						{
							"name": "warningBoxZerotTrust",
							"type": "Microsoft.Common.InfoBox",
							"visible": "[and(steps('prereqs').storage.enableZeroTrustStorage, equals(steps('imageCustomizations').downloadLatestMicrosoftContent, false))]",
							"options": {
								"style": "Warning",
								"text": "This page of the wizard allows you to add image customizations by downloading blobs from the storage account selected on the <b>Prerequisites</b> page and performing the defined actions. The blobs for the predefined installers listed below (i.e., FSLogix, Office, OneDrive, Teams, Virtual Desktop Optimization Tool) must be present in the storage account. The easiest way to upload them to the storage account is through the Deploy-ImageManagementResources script."
							}
						},
						{
							"name": "warningBoxInternet",
							"type": "Microsoft.Common.InfoBox",
							"visible": "[and(not(contains(steps('basics').meApi.transformed.context, 'microsoft.us')), not(contains(steps('basics').meApi.transformed.context, 'microsoft.com')), steps('imageCustomizations').downloadLatestMicrosoftContent)]",
							"options": {
								"style": "Warning",
								"text": "This page of the wizard allows you to add predefined and custom defined image customizations. The built-in customizations (i.e., FSLogix, Office, OneDrive, Teams, Virtual Desktop Optimization Tool) require Internet access in order to be able to download the installers from Microsoft. If this is not available, then you must enable the Zero Trust option after completing the prerequisite deployment of Image Management Resources."
							}
						},
						{
							"name": "warningBoxAirGapped",
							"type": "Microsoft.Common.InfoBox",
							"visible": "[and(or(contains(steps('basics').meApi.transformed.context, 'scloud'), contains(steps('basics').meApi.transformed.context, 'eaglex')), steps('imageCustomizations').downloadLatestMicrosoftContent)]",
							"options": {
								"style": "Warning",
								"text": "This page of the wizard allows you to add predefined and custom defined image customizations. The FSLogix, M365 Apps, OneDrive, and Teams installations require access to the air-gapped cloud-specific download locations in order to be able to download the installers required. If this is not available, then you must enable the Zero Trust option after completing the prerequisite deployment of Image Management Resources.",
                                "uri": "https://www.github.com/azure/federalavd/docs/airgapped.md"
							}
						},
						{
							"name": "fslogix",
							"type": "Microsoft.Common.Section",
							"label": "FsLogix",
							"elements": [
								{
									"name": "installFsLogix",
									"type": "Microsoft.Common.CheckBox",
									"label": "Install FsLogix Agent",
									"toolTip": "Check to install FsLogix Agent",
									"visible": "[or(steps('prereqs').storage.enableZeroTrustStorage, and(not(contains(steps('basics').meApi.transformed.context, 'eaglex')), not(contains(steps('basics').meApi.transformed.context, 'scloud'))))]"
								}
							]
						},
						{
							"name": "office",
							"type": "Microsoft.Common.Section",
							"label": "Microsoft 365 Apps",
							"elements": [
								{
									"name": "office365AppsToInstall",
									"type": "Microsoft.Common.DropDown",
									"label": "Office 365 ProPlus Apps",
									"defaultValue": [
										{
											"value": "Access"
										},
										{
											"value": "Excel"
										},
										{
											"value": "OneNote"
										},
										{
											"value": "Outlook"
										},
										{
											"value": "PowerPoint"
										},
										{
											"value": "Word"
										}
									],
									"multiselect": true,
									"toolTip": "Select the list of Office 365 ProPlus apps you wish to install.",
									"constraints": {
										"allowedValues": [
											{
												"label": "Access",
												"value": "Access"
											},
											{
												"label": "Excel",
												"value": "Excel"
											},
											{
												"label": "OneNote",
												"value": "OneNote"
											},
											{
												"label": "Outlook",
												"value": "Outlook"
											},
											{
												"label": "PowerPoint",
												"value": "PowerPoint"
											},
											{
												"label": "Project",
												"value": "Project"
											},
											{
												"label": "Publisher",
												"value": "Publisher"
											},
											{
												"label": "SkypeForBusiness",
												"value": "SkypeForBusiness"
											},
											{
												"label": "Visio",
												"value": "Visio"
											},
											{
												"label": "Word",
												"value": "Word"
											}
										],
										"required": false
									},
									"visible": "[not(equals(steps('imageVm').imageSource.offer, 'office-365'))]"
								},
								{
									"name": "installOneDrive",
									"type": "Microsoft.Common.CheckBox",
									"label": "Install OneDrive (Per Machine)",
									"defaultValue": true,
									"toolTip": "Select to install OneDrive in per-machine mode for VDI",
									"visible": "[not(equals(steps('imageVm').imageSource.offer, 'office-365'))]"
								},
								{
									"name": "installTeams",
									"type": "Microsoft.Common.CheckBox",
									"label": "Install Teams for VDI",
									"defaultValue": true,
									"toolTip": "Select to install the New Teams client for VDI.",
									"visible": "[not(equals(steps('imageVm').imageSource.offer, 'office-365'))]"
								},
								{
									"name": "teamsCloudType",
									"type": "Microsoft.Common.DropDown",
									"label": "Teams Cloud Type",
									"defaultValue": "Commercial",
									"constraints": {
										"allowedValues": [
											{
												"label": "Commercial",
												"value": "Commercial"
											},
											{
												"label": "GCC",
												"value": "GCC"
											},
											{
												"label": "GCC-High",
												"value": "GCCH"
											},
											{
												"label": "DoD",
												"value": "DOD"
											},
											{
												"label": "USSec",
												"value": "USSec"
											},
											{
												"label": "USNat",
												"value": "USNat"
											},
											{
												"label": "Gallatin",
												"value": "Gallatin"
											}
										],
										"required": false
									},
									"visible": "[and(not(equals(steps('imageVm').imageSource.offer, 'office-365')), steps('imageCustomizations').office.installTeams)]"
								},
								{
									"name": "warningBoxAirGapped",
									"type": "Microsoft.Common.InfoBox",
									"visible": "[and(equals(steps('prereqs').storage.enableZeroTrustStorage, false), steps('imageCustomizations').office.installTeams, or(contains(steps('basics').meApi.transformed.context, 'scloud'), contains(steps('basics').meApi.transformed.context, 'eaglex')), steps('imageCustomizations').downloadLatestMicrosoftContent)]",
									"options": {
										"style": "Warning",
										"text": "Teams will not be installed with the media optimizations enabled as the required installers are not available on Air-Gapped clouds. In order to support optimizations, you should download Webview2, the WebRTC Redirector Service, and the latest Visual Studio C++ Redistributables, and put them in a storage account and then set up the zero trust configuration with a user-assigned managed identity.",
                                        "uri": "https://www.github.com/azure/federalavd/docs/airgapped.md"
                                    }
								}
							]
						},
						{
							"name": "customizations",
							"type": "Microsoft.Common.Section",
							"label": "Other Customizations",
							"elements": [
								{
									"name": "appsToRemove",
									"type": "Microsoft.Common.DropDown",
									"label": "Built-in Apps to Remove",
									"defaultValue": [
										{
											"value": "Microsoft.BingNews"
										},
										{
											"value": "Microsoft.BingWeather"
										},
										{
											"value": "Microsoft.GamingApp"
										},
										{
											"value": "Microsoft.GetHelp"
										},
										{
											"value": "Microsoft.Getstarted"
										},
										{
											"value": "Microsoft.Messaging"
										},
										{
											"value": "Microsoft.Microsoft3DViewer"
										},
										{
											"value": "Microsoft.MicrosoftSolitaireCollection"
										},
										{
											"value": "Microsoft.Microsoft3DViewer"
										},
										{
											"value": "Microsoft.MixedReality.Portal"
										},
										{
											"value": "Microsoft.Office.OneNote"
										},
										{
											"value": "Microsoft.OutlookForWindows"
										},
										{
											"value": "Microsoft.Outlook.DesktopIntegrationServices"
										},
										{
											"value": "Microsoft.OneConnect"
										},
										{
											"value": "Microsoft.MicrosoftSolitaireCollection"
										},
										{
											"value": "Microsoft.People"
										},
										{
											"value": "Microsoft.PowerAutomateDesktop"
										},
										{
											"value": "Microsoft.SkypeApp"
										},
										{
											"value": "Microsoft.Todos"
										},
										{
											"value": "Microsoft.Wallet"
										},
										{
											"value": "Microsoft.WindowsAlarms"
										},
										{
											"value": "Microsoft.WindowsCamera"
										},
										{
											"value": "microsoft.windowscommunicationsapps"
										},
										{
											"value": "Microsoft.WindowsFeedbackHub"
										},
										{
											"value": "Microsoft.WindowsFeedbackHub"
										},
										{
											"value": "Microsoft.WindowsMaps"
										},
										{
											"value": "Microsoft.WindowsSoundRecorder"
										},
										{
											"value": "Microsoft.Xbox.TCUI"
										},
										{
											"value": "Microsoft.XboxApp"
										},
										{
											"value": "Microsoft.XboxGameOverlay"
										},
										{
											"value": "Microsoft.XboxGamingOverlay"
										},
										{
											"value": "Microsoft.XboxIdentityProvider"
										},
										{
											"value": "Microsoft.XboxSpeechToTextOverlay"
										},
										{
											"value": "Microsoft.YourPhone"
										},
										{
											"value": "Microsoft.ZuneMusic"
										},
										{
											"value": "Microsoft.ZuneVideo"
										},
										{
											"value": "MicrosoftCorporationII.QuickAssist"
										}
									],
									"multiselect": true,
									"toolTip": "Select the built-in AppX packages you wish to remove.",
									"constraints": {
										"allowedValues": [
											{
												"label": "Clipchamp.Clipchamp",
												"value": "Clipchamp.Clipchamp"
											},
											{
												"label": "Microsoft.BingNews",
												"value": "Microsoft.BingNews"
											},
											{
												"label": "Microsoft.BingWeather",
												"value": "Microsoft.BingWeather"
											},
											{
												"label": "Microsoft.GamingApp",
												"value": "Microsoft.GamingApp"
											},
											{
												"label": "Microsoft.GetHelp",
												"value": "Microsoft.GetHelp"
											},
											{
												"label": "Microsoft.Getstarted",
												"value": "Microsoft.Getstarted"
											},
											{
												"label": "Microsoft.HEIFImageExtension",
												"value": "Microsoft.HEIFImageExtension"
											},
											{
												"label": "Microsoft.Messaging",
												"value": "Microsoft.Messaging"
											},
											{
												"label": "Microsoft.Microsoft3DViewer",
												"value": "Microsoft.Microsoft3DViewer"
											},
											{
												"label": "Microsoft.MicrosoftOfficeHub",
												"value": "Microsoft.MicrosoftOfficeHub"
											},
											{
												"label": "Microsoft.MicrosoftSolitaireCollection",
												"value": "Microsoft.MicrosoftSolitaireCollection"
											},
											{
												"label": "Microsoft.MicrosoftStickyNotes",
												"value": "Microsoft.MicrosoftStickyNotes"
											},
											{
												"label": "Microsoft.MixedReality.Portal",
												"value": "Microsoft.MixedReality.Portal"
											},
											{
												"label": "Microsoft.MSPaint",
												"value": "Microsoft.MSPaint"
											},
											{
												"label": "Microsoft.Office.OneNote",
												"value": "Microsoft.Office.OneNote"
											},
											{
												"label": "Microsoft.OneConnect",
												"value": "Microsoft.OneConnect"
											},
											{
												"label": "Microsoft.Outlook.DesktopIntegrationServices",
												"value": "Microsoft.Outlook.DesktopIntegrationServices"
											},
											{
												"label": "Microsoft.OutlookForWindows",
												"value": "Microsoft.OutlookForWindows"
											},
											{
												"label": "Microsoft.People",
												"value": "Microsoft.People"
											},
											{
												"label": "Microsoft.PowerAutomateDesktop",
												"value": "Microsoft.PowerAutomateDesktop"
											},
											{
												"label": "Microsoft.ScreenSketch",
												"value": "Microsoft.ScreenSketch"
											},
											{
												"label": "Microsoft.SkypeApp",
												"value": "Microsoft.SkypeApp"
											},
											{
												"label": "Microsoft.Todos",
												"value": "Microsoft.Todos"
											},
											{
												"label": "Microsoft.VP9VideoExtensions",
												"value": "Microsoft.VP9VideoExtensions"
											},
											{
												"label": "Microsoft.Wallet",
												"value": "Microsoft.Wallet"
											},
											{
												"label": "Microsoft.WebMediaExtensions",
												"value": "Microsoft.WebMediaExtensions"
											},
											{
												"label": "Microsoft.WebpImageExtension",
												"value": "Microsoft.WebpImageExtension"
											},
											{
												"label": "Microsoft.Whiteboard",
												"value": "Microsoft.Whiteboard"
											},
											{
												"label": "Microsoft.Windows.Photos",
												"value": "Microsoft.Windows.Photos"
											},
											{
												"label": "Microsoft.WindowsAlarms",
												"value": "Microsoft.WindowsAlarms"
											},
											{
												"label": "Microsoft.WindowsCalculator",
												"value": "Microsoft.WindowsCalculator"
											},
											{
												"label": "Microsoft.WindowsCamera",
												"value": "Microsoft.WindowsCamera"
											},
											{
												"label": "microsoft.windowscommunicationsapps",
												"value": "microsoft.windowscommunicationsapps"
											},
											{
												"label": "Microsoft.WindowsFeedbackHub",
												"value": "Microsoft.WindowsFeedbackHub"
											},
											{
												"label": "Microsoft.WindowsMaps",
												"value": "Microsoft.WindowsMaps"
											},
											{
												"label": "Microsoft.WindowsNotepad",
												"value": "Microsoft.WindowsNotepad"
											},
											{
												"label": "Microsoft.WindowsSoundRecorder",
												"value": "Microsoft.WindowsSoundRecorder"
											},
											{
												"label": "Microsoft.WindowsTerminal",
												"value": "Microsoft.WindowsTerminal"
											},
											{
												"label": "Microsoft.Xbox.TCUI",
												"value": "Microsoft.Xbox.TCUI"
											},
											{
												"label": "Microsoft.XboxApp",
												"value": "Microsoft.XboxApp"
											},
											{
												"label": "Microsoft.XboxGameOverlay",
												"value": "Microsoft.XboxGameOverlay"
											},
											{
												"label": "Microsoft.XboxGamingOverlay",
												"value": "Microsoft.XboxGamingOverlay"
											},
											{
												"label": "Microsoft.XboxIdentityProvider",
												"value": "Microsoft.XboxIdentityProvider"
											},
											{
												"label": "Microsoft.XboxSpeechToTextOverlay",
												"value": "Microsoft.XboxSpeechToTextOverlay"
											},
											{
												"label": "Microsoft.YourPhone",
												"value": "Microsoft.YourPhone"
											},
											{
												"label": "Microsoft.ZuneMusic",
												"value": "Microsoft.ZuneMusic"
											},
											{
												"label": "Microsoft.ZuneVideo",
												"value": "Microsoft.ZuneVideo"
											},
											{
												"label": "MicrosoftCorporationII.QuickAssist",
												"value": "MicrosoftCorporationII.QuickAssist"
											}
										],
										"required": false
									},
									"visible": true
								},
								{
									"name": "installVirtualDesktopOptimizationTool",
									"type": "Microsoft.Common.CheckBox",
									"label": "Apply Virtual Desktop Optimizations",
									"toolTip": "Select to apply the customizations prescribed in the Virtual Desktop Optimization Tool",
									"visible": "[or(steps('prereqs').storage.enableZeroTrustStorage, and(not(contains(steps('basics').meApi.transformed.context, 'eaglex')), not(contains(steps('basics').meApi.transformed.context, 'scloud'))))]"
								},
								{
									"name": "cleanupDesktop",
									"type": "Microsoft.Common.CheckBox",
									"label": "Cleanup the Common Desktop",
									"toolTip": "Select to remove all items from the common desktop"									
								}
							]
						},
						{
							"name": "customSoftware",
							"type": "Microsoft.Common.Section",
							"label": "Custom Software",
							"elements": [
								{
									"name": "addCustomSoftware",
									"type": "Microsoft.Common.CheckBox",
									"label": "Add Custom Software",
									"toolTip": "Select to add custom software to the image",
									"visible": true
								},
								{
									"name": "customizationInfoBox",
									"type": "Microsoft.Common.InfoBox",
									"visible": "[steps('imageCustomizations').customSoftware.addCustomSoftware]",
									"options": {
										"style": "Warning",
										"text": "The list of customizations and software in this section must be installed silently without user interaction. In addition they must be able to survive restarts, sysprep, and not generate system specific identifier as the image will be used on multiple session host virtual machines. Use the VDI Customizations section below to install software that can be installed in a way not to generate a system specific identifier until after a system restart."
									}
								},
								{
									"name": "customizationText",
									"type": "Microsoft.Common.TextBlock",
									"visible": "[steps('imageCustomizations').customSoftware.addCustomSoftware]",
									"options": {
										"text": "Enter customizations for your image below. The first column is a free-form text field that can only contain alphanumerics and no spaces. The second column is the blob name or full URI and is case-sensitive. The third column is for any arguments."
									}
								},
								{
									"name": "customizations",
									"type": "Microsoft.Common.EditableGrid",
									"ariaLabel": "Customizations",
									"label": "Custom Scripts and Software",
									"visible": "[steps('imageCustomizations').customSoftware.addCustomSoftware]",
									"constraints": {
										"width": "Full",
										"rows": {
											"count": {
												"min": 1,
												"max": 25
											}
										},
										"columns": [
											{
												"id": "name",
												"header": "Name",
												"width": "1fr",
												"element": {
													"type": "Microsoft.Common.TextBox",
													"placeholder": "Example: vscode",
													"validations": [
														{
															"regex": "^[A-Za-z0-9-]{1,24}$",
															"message": "Only alphanumerics and dashes (-) are allowed up to 24 characters"
														}
													]
												}
											},
											{
												"id": "blobNameOrUri",
												"header": "Blob Name (or URI)",
												"width": "10fr",
												"element": {
													"type": "Microsoft.Common.TextBox",
													"placeholder": "Example: VSCodeSetup-x64-1.81.1.exe",
													"constraints": {
														"required": true
													}
												}
											},
											{
												"id": "arguments",
												"header": "Arguments",
												"width": "1fr",
												"element": {
													"type": "Microsoft.Common.TextBox",
													"placeholder": "Example: /verysilent /mergetasks='!runcode'",
													"constraints": {
														"required": false
													}
												}
											}
										]
									}
								},
								{
									"name": "addVDICustomSoftware",
									"type": "Microsoft.Common.CheckBox",
									"label": "Add VDI Custom Software",
									"toolTip": "Select to add custom software to the image",
									"visible": true
								},
								{
									"name": "vdiCustomizationInfoBox",
									"type": "Microsoft.Common.InfoBox",
									"visible": "[steps('imageCustomizations').customSoftware.addVDICustomSoftware]",
									"options": {
										"style": "Warning",
										"text": "The list of customizations and software in this section must be installed silently without user interaction. In addition, they must be able to survive sysprep. Installing software using this parameter allows the installation of agents and other software items that can be configured to generate a unique system identifier after a restart."
									}
								},
								{
									"name": "customizationText",
									"type": "Microsoft.Common.TextBlock",
									"visible": "[steps('imageCustomizations').customSoftware.addVDICustomSoftware]",
									"options": {
										"text": "Enter customizations for your image below. The first column is a free-form text field that can only contain alphanumerics and no spaces. The second column is the blob name or full URI and is case-sensitive. The third column is for any arguments."
									}
								},
								{
									"name": "vdiCustomizations",
									"type": "Microsoft.Common.EditableGrid",
									"ariaLabel": "VDICustomizations",
									"label": "Custom Scripts and Software",
									"visible": "[steps('imageCustomizations').customSoftware.addVDICustomSoftware]",
									"constraints": {
										"width": "Full",
										"rows": {
											"count": {
												"min": 1,
												"max": 5
											}
										},
										"columns": [
											{
												"id": "name",
												"header": "Name",
												"width": "1fr",
												"element": {
													"type": "Microsoft.Common.TextBox",
													"placeholder": "Example: vscode",
													"validations": [
														{
															"regex": "^[A-Za-z0-9-]{1,24}$",
															"message": "Only alphanumerics and dashes (-) are allowed up to 24 characters"
														}
													]
												}
											},
											{
												"id": "blobNameOrUri",
												"header": "Blob Name (or URI)')",
												"width": "10fr",
												"element": {
													"type": "Microsoft.Common.TextBox",
													"placeholder": "Example: VSCodeSetup-x64-1.81.1.exe",
													"constraints": {
														"required": true
													}
												}
											},
											{
												"id": "arguments",
												"header": "Arguments",
												"width": "1fr",
												"element": {
													"type": "Microsoft.Common.TextBox",
													"placeholder": "Example: /verysilent /mergetasks='!runcode'",
													"constraints": {
														"required": false
													}
												}
											}
										]
									}
								}
							],
							"visible": true
						},
						{
							"name": "updates",
							"type": "Microsoft.Common.Section",
							"label": "Software Updates",
							"elements": [
								{
									"name": "installUpdates",
									"type": "Microsoft.Common.CheckBox",
									"label": "Install Windows Updates",
									"toolTip": "Select to install updates and specify an update source."
								},
								{
									"name": "updateService",
									"type": "Microsoft.Common.DropDown",
									"label": "Software update service",
									"defaultValue": "Microsoft Update",
									"toolTip": "Select the appropriate update source for your environment.",
									"constraints": {
										"allowedValues": [
											{
												"label": "Microsoft Update",
												"value": "MU"
											},
											{
												"label": "Windows Update",
												"value": "WU"
											},
											{
												"label": "Windows Server Update Services (WSUS)",
												"value": "WSUS"
											},
											{
												"label": "DCAT (Flighting updates like previews, rarely used)",
												"value": "DCAT"
											},
											{
												"label": "Microsoft Store",
												"value": "STORE"
											},
											{
												"label": "Other",
												"value": "OTHER"
											}
										],
										"required": false
									},
									"visible": "[if(equals(steps('imageCustomizations').updates.installUpdates, true), true, false)]"
								},
								{
									"name": "wsusServer",
									"type": "Microsoft.Common.TextBox",
									"label": "WSUS Url",
									"placeholder": "https://wsus.corp.contoso.com:8531",
									"toolTip": "Specify an accessible WSUS server. Include the port if necessary.",
									"constraints": {
										"required": true
									},
									"visible": "[if(equals(steps('imageCustomizations').updates.updateService, 'WSUS'), true, false)]"
								}
							]
						},
						{
							"name": "logging",
							"type": "Microsoft.Common.Section",
							"label": "Log Collection",
							"elements": [
								{
									"name": "infoBox",
									"type": "Microsoft.Common.InfoBox",
									"visible": true,
									"options": {
										"style": "Info",
										"text": "If you choose to collect logs, a new randomly-named storage account will be created in the build resource group with a blob container called 'image-customization-logs'. All standard and error output will be written to individual blobs and saved for 7 days."
									}
								},
								{
									"name": "collectLogs",
									"type": "Microsoft.Common.CheckBox",
									"label": "Collect customization logs in a storage container"
								},
								{
									"name": "networkAccess",
									"type": "Microsoft.Common.OptionsGroup",
									"defaultValue": "Private Endpoint",
									"label": "Storage Account Networking Endpoint",
									"constraints": {
										"allowedValues": "[if(empty(filter(filter(steps('prereqs').network.subnetsApi.value, (snet) => equals(snet.name, last(split(steps('prereqs').network.subnet, '/')))), (snet) => equals(first(map(snet.properties.serviceEndpoints, (se) => se.service)), 'Microsoft.Storage'))), parse('[{\"label\":\"Private Endpoint\",\"value\":\"PrivateEndpoint\"},{\"label\":\"Public Endpoint\",\"value\":\"PublicEndpoint\"}]'), parse('[{\"label\":\"Private Endpoint\",\"value\":\"PrivateEndpoint\"},{\"label\":\"Service Endpoint\",\"value\":\"ServiceEndpoint\"},{\"label\":\"Public Endpoint\",\"value\":\"PublicEndpoint\"}]'))]",
										"required": true
									},
									"toolTip": "Select the storage account network access configuration below.</br></br>If you select 'Private Endpoint', then you must specify the subnet where it will be attached and select the blob storage private DNS zone where it's record will be created.</br></br>If you select 'Service Endpoint', then the subnet to which the image virtual machine is attached will be configured with a service endpoint for 'Microsoft.Storage' and the storage account will be configured to only allow access from this network.</br></br>If you select 'Public Access', then the storage account will allow access through the public endpoint.",
									"visible": "[steps('imageCustomizations').logging.collectLogs]"
								},
								{
									"name": "virtualNetwork",
									"type": "Microsoft.Common.DropDown",
									"visible": "[and(steps('imageCustomizations').logging.collectLogs, equals(steps('imageCustomizations').logging.networkAccess, 'PrivateEndpoint'))]",
									"label": "Virtual Network",
									"defaultValue": "[steps('prereqs').network.virtualNetwork.name]",
									"toolTip": "Select an existing virtual network for the storage account blob private endpoint. If the desired network isn't available be sure to change the region in the Deployment Details section above.",
									"constraints": {
										"required": false,
										"allowedValues": "[map(filter(steps('basics').virtualNetworksApi.value, (item) => equals(item.location, steps('basics').scope.location.name)), (item) => parse(concat('{\"label\":\"', item.name, '\",\"description\":\"Resource group: ', first(skip(split(item.id, '/'), 4)), '\",\"value\":\"', item.id, '\"}')))]"
									}
								},
								{
									"name": "subnetsApi",
									"type": "Microsoft.Solutions.ArmApiControl",
									"condition": "[not(empty(steps('imageCustomizations').logging.virtualNetwork))]",
									"request": {
										"method": "GET",
										"path": "[concat(steps('imageCustomizations').logging.virtualNetwork, '/subnets?api-version=2022-05-01')]"
									}
								},
								{
									"name": "subnet",
									"type": "Microsoft.Common.DropDown",
									"visible": "[and(steps('imageCustomizations').logging.collectLogs, equals(steps('imageCustomizations').logging.networkAccess, 'PrivateEndpoint'))]",
									"label": "Subnet",
									"defaultValue": "",
									"toolTip": "Select an existing subnet for the storage account private endpoint.",
									"constraints": {
										"required": true,
										"allowedValues": "[map(steps('imageCustomizations').logging.subnetsApi.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.id, '\"}')))]"
									}
								},
								{
									"name": "privateDNSZoneIntegrationTextBlock",
									"type": "Microsoft.Common.TextBlock",
									"visible": "[and(steps('imageCustomizations').logging.collectLogs, equals(steps('imageCustomizations').logging.networkAccess, 'PrivateEndpoint'))]",
									"options": {
										"text": "To connect privately with your private endpoint, you need a DNS record. We recommend that you integrate your private endpoint with a private DNS zone. If you select the checkbox below, you'll be asked to select the appropriate Private DNS Zone for each resource type deployed by this solution and the deployment will automatically create the Private DNS integration when creating the private endpoints. Alternatively, you can assign policies to private endpoints to automatically register the endpoints with the appropriate private DNS zones. Uncheck the box below if that is the method you are using.",
										"link": {
											"label": "Learn more",
											"uri": "https://learn.microsoft.com/en-us/azure/private-link/private-endpoint-overview#dns-configuration"
										}
									}
								},
								{
									"name": "enablePrivateDNSIntegration",
									"type": "Microsoft.Common.CheckBox",
									"label": "Enable Private DNS Zone Integration",
									"toolTip": "To connect privately with your private endpoint, you need a DNS record. Check this box to select the appropriate private DNS zones so that the deployment automatically integrates each private endpoint with Azure private DNS.",
									"defaultValue": true,
									"visible": "[and(steps('imageCustomizations').logging.collectLogs, equals(steps('imageCustomizations').logging.networkAccess, 'PrivateEndpoint'))]"
								},
								{
									"name": "privateDNSZonesSubscription",
									"type": "Microsoft.Common.DropDown",
									"label": "Private DNS Zone Subscription",
									"placeholder": "",
									"defaultValue": "[steps('basics').scope.subscription.displayName]",
									"toolTip": "Select the subscription that contains your Private DNS Zones.",
									"constraints": {
										"allowedValues": "[map(steps('basics').subscriptionsApi.value, (sub) => parse(concat('{\"label\":\"', sub.displayName, '\",\"value\":{\"id\":\"', sub.id, '\",\"displayName\":\"', sub.displayName, '\"}}')))]",
										"required": true
									},
									"visible": "[and(steps('imageCustomizations').logging.collectLogs, equals(steps('imageCustomizations').logging.networkAccess, 'PrivateEndpoint'), steps('imageCustomizations').logging.enablePrivateDNSIntegration)]"
								},
								{
									"name": "privateDNSZonesApi",
									"type": "Microsoft.Solutions.ArmApiControl",
									"condition": "[not(empty(steps('basics').scope.subscription))]",
									"request": {
										"method": "GET",
										"path": "[concat(steps('imageCustomizations').logging.privateDNSZonesSubscription.id, '/providers/Microsoft.Network/privateDnsZones?api-version=2018-09-01')]"
									}
								},
								{
									"name": "blobPrivateDnsZone",
									"type": "Microsoft.Common.DropDown",
									"visible": "[and(steps('imageCustomizations').logging.collectLogs, equals(steps('imageCustomizations').logging.networkAccess, 'PrivateEndpoint'), steps('imageCustomizations').logging.enablePrivateDNSIntegration)]",
									"label": "Blob Storage Private DNS Zone",
									"defaultValue": "",
									"multiLine": true,
									"toolTip": "Select the Azure Blob Storage Private Link Private DNS Zone.",
									"constraints": {
										"required": true,
										"allowedValues": "[map(filter(steps('imageCustomizations').logging.privateDNSZonesApi.value, (zone) => contains(zone.name, 'privatelink.blob.')), (zone) => parse(concat('{\"label\":\"', zone.name, '\",\"description\":\"Resource group: ', first(skip(split(zone.id, '/'), 4)), '\",\"value\":\"', zone.id, '\"}')))]"
									}
								}
							]
						}
					]
				},
				{
					"name": "imageDest",
					"label": "Image Distribution Options",
					"elements": [
						{
							"name": "info",
							"type": "Microsoft.Common.TextBlock",
							"visible": true,
							"options": {
								"text": "For image management, this solution will create a new image version of a image (definition) in the Azure Compute Gallery selected on the Basics tab. You have the option to use an existing image definiton or define a new one.",
								"link": {
									"label": "Learn more about managing images with an Azure Compute Gallery.",
									"uri": "https://learn.microsoft.com/en-us/azure/virtual-machines/windows/image-builder-gallery"
								}
							}
						},
						{
							"name": "imageDefinition",
							"type": "Microsoft.Common.Section",
							"visible": true,
							"label": "Image Definition Details",
							"elements": [
								{
									"name": "useExImageDef",
									"type": "Microsoft.Common.OptionsGroup",
									"label": "Use Existing Image Definition",
									"defaultValue": "Yes",
									"toolTip": "Determines if you want to use an existing image definition from the Azure Compute Gallery selected on the 'Prerequisites' page or create a new one.",
									"constraints": {
										"allowedValues": [
											{
												"label": "Yes",
												"value": true
											},
											{
												"label": "No",
												"value": false
											}
										],
										"required": false
									},
									"visible": true
								},
								{
									"name": "warningBox",
									"type": "Microsoft.Common.InfoBox",
									"visible": "[equals(steps('imageDest').imageDefinition.useExImageDef, true)]",
									"options": {
										"style": "Warning",
										"text": "The image definition you choose below must have the appropriate features selected for the security type and accelerated networking that you picked on the 'Image Virtual Machine' page."
									}
								},
								{
									"name": "imagesApi",
									"type": "Microsoft.Solutions.ArmApiControl",
									"condition": "[not(empty(steps('prereqs').gallery.gallery))]",
									"request": {
										"method": "GET",
										"path": "[concat(steps('prereqs').gallery.gallery.id, '/images?api-version=2022-03-03')]"
									}
								},
								{
									"name": "imageDefinition",
									"type": "Microsoft.Common.DropDown",
									"label": "Image Definition",
									"multiLine": true,
									"toolTip": "Select the existing image definition for which a new image version will be selected. If the desired image definition is not available, check your Compute Gallery selection on the 'Prerequisites' page or select to create a new one above.",
									"filterPlaceholder": "",
									"constraints": {
										"allowedValues": "[map(steps('imageDest').imageDefinition.imagesApi.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"description\":\"', first(map(item.properties.features, (feat) => feat.SecurityType)), '\",\"value\":\"', item.name, '\"}')))]",
										"required": true
									},
									"visible": "[equals(steps('imageDest').imageDefinition.useExImageDef, true)]"
								},
								{
									"name": "textBlockImageDefinition",
									"type": "Microsoft.Common.TextBlock",
									"visible": "[equals(steps('imageDest').imageDefinition.useExImageDef, false)]",
									"options": {
										"text": "Use the first text box below to provide a custom name for the image definition, if desired. If you leave the custom name blank, then the image definition name will be created based on the 'publisher', 'offer', and 'sku' provided below using CAF naming standards."
									}
								},
								{
									"name": "customImageDefinitionName",
									"type": "Microsoft.Common.TextBox",
									"label": "Custom Image Definition Name",
									"placeholder": "vmid-<imagePublisher>-<imageOffer>-<imageSku>-<environment>-<location>",
									"toolTip": "The name of the image definition to create in the Image Gallery. Leave blank if you want to allow this deployment to create an image definition in the Image Gallery chosen on the 'Prerequisites' page with a name based on the selections below.",
									"constraints": {
										"required": false,
										"regex": "^[a-z0-9A-Z-]{2,80}$",
										"validationMessage": "When provided, the name must be between 2 and 80 characters long and only use valid characters."
									},
									"visible": "[equals(steps('imageDest').imageDefinition.useExImageDef, false)]"
								},
								{
									"name": "imageDefinitionPublisher",
									"type": "Microsoft.Common.TextBox",
									"label": "Image Definition Publisher",
									"subLabel": "",
									"defaultValue": "[steps('imageVm').imageSource.publisher]",
									"toolTip": "The compute gallery image definition Publisher.",
									"constraints": {
										"required": true,
										"regex": "^[A-Za-z0-9][A-Za-z0-9_-]{0,126}[A-Za-z0-9]$",
										"validationMessage": "The value must contain only valid characters, no spaces, and be between 2 and 128 characters in length."
									},
									"visible": "[equals(steps('imageDest').imageDefinition.useExImageDef, false)]"
								},
								{
									"name": "imageDefinitionOffer",
									"type": "Microsoft.Common.TextBox",
									"label": "Image Definition Offer",
									"subLabel": "",
									"defaultValue": "[steps('imageVm').imageSource.offer]",
									"toolTip": "The compute gallery image definition Offer.",
									"constraints": {
										"required": true,
										"regex": "^[A-Za-z0-9][A-Za-z0-9_-]{0,62}[A-Za-z0-9]$",
										"validationMessage": "The value must contain only valid characters, no spaces, and be between 2 and 64 characters in length."
									},
									"visible": "[equals(steps('imageDest').imageDefinition.useExImageDef, false)]"
								},
								{
									"name": "imageDefinitionSku",
									"type": "Microsoft.Common.TextBox",
									"label": "Image Definition Sku",
									"subLabel": "",
									"defaultValue": "[steps('imageVm').imageSource.sku]",
									"toolTip": "The compute gallery image definition Sku.",
									"constraints": {
										"required": true,
										"regex": "^[A-Za-z0-9][A-Za-z0-9_-]{0,62}[A-Za-z0-9]$",
										"validationMessage": "The value must contain only valid characters, no spaces, and be between 2 and 64 characters in length."
									},
									"visible": "[equals(steps('imageDest').imageDefinition.useExImageDef, false)]"
								},
								{
									"name": "securityType",
									"type": "Microsoft.Common.DropDown",
									"label": "Security type",
									"defaultValue": "Trusted Launch",
									"toolTip": "Choose a type of security that matches your needs: Standard includes basic protections at no additional cost. Trusted launch virtual machines provide additional security features on Gen2 virtual machines to protect against persistent and advanced attacks.",
									"constraints": {
										"required": false,
										"allowedValues": [
											{
												"label": "Standard",
												"value": "Standard"
											},
											{
												"label": "Trusted Launch",
												"value": "TrustedLaunch"
											},
											{
												"label": "Trusted Launch Supported",
												"value": "TrustedLaunchSupported"
											},
											{
												"label": "Confidential VM",
												"value": "ConfidentialVM"
											},
											{
												"label": "Confidential VM Supported",
												"value": "ConfidentialVMSupported"
											},
											{
												"label": "Trusted Launch and Confidential VM Supported",
												"value": "TrustedLaunchAndConfidentialVmSupported"
											}
										]
									},
									"visible": "[and(equals(steps('imageDest').imageDefinition.useExImageDef, false), or(contains(steps('imageVm').imageSource.sku, 'g2'), contains(steps('imageVm').imageSource.sku, 'win11'), contains(steps('imageVm').imageSource.sku, '2022')))]"
								},
								{
									"name": "isAcceleratedNetworkSupported",
									"type": "Microsoft.Common.DropDown",
									"label": "Accelerated Networking Supported",
									"defaultValue": "[if(contains(steps('imageDest').imageDefinition.securityType, 'Confidential'), 'No', 'Yes')]",
									"toolTip": "Set to 'Yes' to allow Virtual Machines deployed from the image to use Accelerated Networking. When set to 'Yes' on the Image definition, capturing VMs that don't support accelerated networking is not supported.",
									"constraints": {
										"allowedValues": "[if(contains(steps('imageDest').imageDefinition.securityType, 'Confidential'), parse('[{\"label\":\"No\",\"value\":false}]'), parse('[{\"label\":\"Yes\",\"value\":true},{\"label\":\"No\",\"value\":false}]'))]",
										"required": true
									},
									"visible": "[equals(steps('imageDest').imageDefinition.useExImageDef, false)]"
								},
								{
									"name": "isHibernateSupported",
									"type": "Microsoft.Common.DropDown",
									"label": "Hibernation Supported (preview)",
									"defaultValue": "No",
									"toolTip": "Set this to 'Yes' to enable Virtual Machines to be deployed from this image definition that support hibernation.",
									"constraints": {
										"required": false,
										"allowedValues": [
											{
												"label": "Yes",
												"value": true
											},
											{
												"label": "No",
												"value": false
											}
										]
									},
									"visible": "[and(equals(steps('imageDest').imageDefinition.useExImageDef, false), or(contains(steps('imageVm').imageSource.sku, 'g2'), contains(steps('imageVm').imageSource.sku, 'win11'), contains(steps('imageVm').imageSource.sku, '2022')) )]"
								},
								{
									"name": "isNVMeSupported",
									"type": "Microsoft.Common.DropDown",
									"label": "Higher storage performance with NVMe (preview)",
									"defaultValue": "No",
									"toolTip": "Set this to 'Yes' to enable the creation of an image that supports VMs using NVMe storage.",
									"constraints": {
										"required": false,
										"allowedValues": [
											{
												"label": "Yes",
												"value": true
											},
											{
												"label": "No",
												"value": false
											}
										]
									},
									"visible": "[and(equals(steps('imageDest').imageDefinition.useExImageDef, false), or(contains(steps('imageVm').imageSource.sku, 'g2'), contains(steps('imageVm').imageSource.sku, 'win11'), contains(steps('imageVm').imageSource.sku, '2022')))]"
								},
								{
									"name": "nvmeWarningBox",
									"type": "Microsoft.Common.InfoBox",
									"visible": "[steps('imageDest').imageDefinition.isNVMeSupported]",
									"options": {
										"style": "Warning",
										"text": "NVMe support is only available on select VM Sizes. See this link to ensure the vm size is compatible with NVMe before continuing.",
										"uri": "https://learn.microsoft.com/en-us/azure/virtual-machines/nvme-overview"
									}
								}
							]
						},
						{
							"name": "imageVersion",
							"type": "Microsoft.Common.Section",
							"label": "Image Version Details",
							"elements": [
								{
									"name": "useCustomVersion",
									"type": "Microsoft.Common.OptionsGroup",
									"label": "Specify Custom Version Information",
									"defaultValue": "No",
									"toolTip": "Select 'Yes' to specify the Major.Minor.Patch version information or 'No' to generate the Image Version based on the Date and Time (i.e., yy.MMdd.mmss).",
									"constraints": {
										"allowedValues": [
											{
												"label": "Yes",
												"value": true
											},
											{
												"label": "No",
												"value": false
											}
										],
										"required": false
									}
								},
								{
									"name": "imageMajorVersion",
									"type": "Microsoft.Common.Slider",
									"label": "Image Major Version",
									"subLabel": "",
									"min": 1,
									"max": 9999,
									"showStepMarkers": false,
									"toolTip": "Pick the first component of the image version",
									"constraints": {
										"required": true
									},
									"visible": "[equals(steps('imageDest').imageVersion.useCustomVersion, true)]"
								},
								{
									"name": "imageMinorVersion",
									"type": "Microsoft.Common.Slider",
									"label": "Image Minor Version",
									"subLabel": "",
									"min": 1,
									"max": 9999,
									"showStepMarkers": false,
									"toolTip": "Pick the second component of the image version",
									"constraints": {
										"required": true
									},
									"visible": "[equals(steps('imageDest').imageVersion.useCustomVersion, true)]"
								},
								{
									"name": "imagePatch",
									"type": "Microsoft.Common.Slider",
									"label": "Image Patch",
									"subLabel": "",
									"min": 1,
									"max": 9999,
									"showStepMarkers": false,
									"toolTip": "Pick the last component of the image version",
									"constraints": {
										"required": true
									},
									"visible": "[equals(steps('imageDest').imageVersion.useCustomVersion, true)]"
								},
								{
									"name": "eolDaysFromNow",
									"type": "Microsoft.Common.Slider",
									"label": "End of Life from today in days",
									"subLabel": "",
									"min": 0,
									"max": 730,
									"showStepMarkers": false,
									"toolTip": "Enter the number of days before this image version should be replaced.",
									"constraints": {
										"required": false
									},
									"visible": true
								},
								{
									"name": "storageAccountType",
									"type": "Microsoft.Common.DropDown",
									"label": "Storage Account Type",
									"defaultValue": "Standard LRS",
									"toolTip": "Select the storage account type for this image version for the region where it is being captured.",
									"constraints": {
										"allowedValues": "[if(empty(filter(first(map(filter(steps('basics').storageApi.value, (resTypes) => equals(resTypes.resourceType, 'storageAccounts')), (sa) => sa.zoneMappings)), (zm) => equals(zm.location, steps('basics').scope.location.displayName))), parse('[{\"label\":\"Standard LRS\",\"value\":\"Standard_LRS\"}]'), parse('[{\"label\":\"Standard LRS\",\"value\":\"Standard_LRS\"},{\"label\":\"Standard ZRS\",\"value\":\"Standard_ZRS\"}]'))]",
										"required": false
									},
									"visible": true
								},
								{
									"name": "replicaCount",
									"type": "Microsoft.Common.Slider",
									"label": "Replica Count",
									"subLabel": "",
									"defaultValue": 1,
									"min": 1,
									"max": 100,
									"showStepMarkers": false,
									"toolTip": "Specify the default replica count per region for this image version. If you don't specify additional replication regions, then this value will be used with the deployment location.",
									"constraints": {
										"required": false
									},
									"visible": true
								},
								{
									"name": "excludeFromLatest",
									"type": "Microsoft.Common.DropDown",
									"label": "Exclude from Latest",
									"defaultValue": "No",
									"toolTip": "Select the value for Exclude from Latest which determines whether this image version will be used when a image resource id uses 'latest' for the version. If you don't specify additional replication regions, then this value will be used with the deployment location.",
									"constraints": {
										"allowedValues": [
											{
												"label": "No",
												"value": false
											},
											{
												"label": "Yes",
												"value": true
											}
										],
										"required": false
									},
									"visible": true
								},
								{
									"name": "specifyReplicationRegions",
									"type": "Microsoft.Common.OptionsGroup",
									"label": "Specify more than one location where the image version should be stored?",
									"defaultValue": "No",
									"constraints": {
										"allowedValues": [
											{
												"label": "Yes",
												"value": true
											},
											{
												"label": "No",
												"value": false
											}
										],
										"required": false
									}
								},
								{
									"name": "repRegionsText",
									"type": "Microsoft.Common.TextBlock",
									"visible": "[if(equals(steps('imageDest').imageVersion.specifyReplicationRegions, true), true, false)]",
									"options": {
										"text": "Use the grid below to add All replication regions and the associated values. To add rows, toggle one of the drop down boxes."
									}
								},
								{
									"name": "replicationRegions",
									"type": "Microsoft.Common.EditableGrid",
									"ariaLabel": "Replication Regions",
									"label": "Replication Regions",
									"visible": "[if(equals(steps('imageDest').imageVersion.specifyReplicationRegions, true), true, false)]",
									"constraints": {
										"width": "Full",
										"rows": {
											"count": {
												"min": 1,
												"max": 10
											}
										},
										"columns": [
											{
												"id": "name",
												"header": "Region",
												"width": "2fr",
												"element": {
													"type": "Microsoft.Common.DropDown",
													"constraints": {
														"allowedValues": "[map(first(map(filter(steps('basics').computeApi.value, (resourceTypes) => equals(resourceTypes.resourceType, 'galleries/images/versions')), (item) => item.locations)), (item) => parse(concat('{\"label\":\"', item, '\",\"value\":\"', toLower(replace(item, ' ', '')), '\"}')))]",
														"required": true
													}
												}
											},
											{
												"id": "storageAccountType",
												"header": "Storage account type",
												"width": "2fr",
												"element": {
													"type": "Microsoft.Common.DropDown",
													"constraints": {
														"required": false,
														"allowedValues": "[if(empty(filter(first(map(filter(steps('basics').storageApi.value, (resTypes) => equals(resTypes.resourceType, 'storageAccounts')), (sa) => sa.zoneMappings)), (zm) => equals(toLower(replace(zm.location, ' ', '')), last(take(steps('imageDest').imageVersion.replicationRegions, $rowIndex)).name))), parse('[{\"label\":\"Standard LRS\",\"value\":\"Standard_LRS\"}]'), parse('[{\"label\":\"Standard LRS\",\"value\":\"Standard_LRS\"},{\"label\":\"Standard ZRS\",\"value\":\"Standard_ZRS\"}]'))]"
													}
												}
											},
											{
												"id": "regionalReplicaCount",
												"header": "Replica Count",
												"width": "1fr",
												"defaultValue": "1",
												"element": {
													"type": "Microsoft.Common.TextBox",
													"constraints": {
														"validations": [
															{
																"regex": "^[1-9]$|^[1-9][0-9]$|^100$",
																"message": "Only integers are allowed from 1-100"
															}
														],
														"required": false
													}
												}
											}
										]
									}
								}
							]
						},
						{
							"name": "disasterRecovery",
							"type": "Microsoft.Common.Section",
							"label": "Disaster Recovery",
							"elements": [
								{
									"name": "infoDisasterRecovery",
									"type": "Microsoft.Common.InfoBox",
									"options": {
										"style": "Info",
										"text": "To recover from a regional outage, it is recommended to maintain an Azure Compute Gallery in a secondary region, as the Azure Compute Gallery is not a global resource. By selecting 'Yes' below, you will be able to choose an Azure Compute Gallery in a secondary region, and a matching image definition and image version will automatically be created in that region.",
										"uri": "https://learn.microsoft.com/en-us/azure/architecture/example-scenario/azure-virtual-desktop/azure-virtual-desktop-multi-region-bcdr#compute"
									}
								},
								{
									"name": "specifyRemoteGallery",
									"type": "Microsoft.Common.OptionsGroup",
									"label": "Specify a remote Azure Compute Gallery for regional disaster recovery purposes.",
									"defaultValue": "No",
									"constraints": {
										"allowedValues": [
											{
												"label": "Yes",
												"value": true
											},
											{
												"label": "No",
												"value": false
											}
										],
										"required": false
									}
								},
								{
									"name": "computeGalleryApi",
									"type": "Microsoft.Solutions.ArmApiControl",
									"condition": "[steps('imageDest').disasterRecovery.specifyRemoteGallery]",
									"request": {
										"method": "GET",
										"path": "[concat(steps('basics').scope.subscription.id,'/providers/Microsoft.Compute/galleries?api-version=2024-03-03')]"
									}
								},
								{
									"name": "remoteComputeGallery",
									"type": "Microsoft.Common.DropDown",
									"label": "Remote Compute Gallery",
									"multiLine": true,
									"toolTip": "Select a Azure Compute Gallery that is not in the same region as the gallery chosen on the 'prereqs' screen.",
									"constraints": {
										"allowedValues": "[map(filter(steps('imageDest').disasterRecovery.computeGalleryApi.value, (cg) => not(equals(cg.location, steps('prereqs').gallery.gallery.location))), (cg) => parse(concat('{\"label\":\"', cg.name, '\",\"description\":\"Location: ', cg.location, '\",\"value\":{\"id\":\"', cg.id, '\",\"location\":\"', cg.location, '\"}}')))]",
										"required": true
									},
									"visible": "[steps('imageDest').disasterRecovery.specifyRemoteGallery]"
								},
								{
									"name": "storageAccountType",
									"type": "Microsoft.Common.DropDown",
									"label": "Storage Account Type",
									"defaultValue": "Standard LRS",
									"toolTip": "Select the storage account type for this image version for the region where it is being captured.",
									"constraints": {
										"allowedValues": "[if(empty(filter(first(map(filter(steps('basics').storageApi.value, (resTypes) => equals(resTypes.resourceType, 'storageAccounts')), (sa) => sa.zoneMappings)), (zm) => equals(toLower(replace(zm.location, ' ', '')), steps('imageDest').disasterRecovery.remoteComputeGallery.location))), parse('[{\"label\":\"Standard LRS\",\"value\":\"Standard_LRS\"}]'), parse('[{\"label\":\"Standard LRS\",\"value\":\"Standard_LRS\"},{\"label\":\"Standard ZRS\",\"value\":\"Standard_ZRS\"}]'))]",
										"required": false
									},
									"visible": "[steps('imageDest').disasterRecovery.specifyRemoteGallery]"
								},
								{
									"name": "replicaCount",
									"type": "Microsoft.Common.Slider",
									"label": "Replica Count",
									"subLabel": "",
									"defaultValue": 1,
									"min": 1,
									"max": 100,
									"showStepMarkers": false,
									"toolTip": "Specify the default replica count per region for this image version. If you don't specify additional replication regions, then this value will be used with the deployment location.",
									"constraints": {
										"required": false
									},
									"visible": "[steps('imageDest').disasterRecovery.specifyRemoteGallery]"
								},
								{
									"name": "excludeFromLatest",
									"type": "Microsoft.Common.DropDown",
									"label": "Exclude from Latest",
									"defaultValue": "No",
									"toolTip": "Select the value for Exclude from Latest which determines whether this image version will be used when a image resource id uses 'latest' for the version. If you don't specify additional replication regions, then this value will be used with the deployment location.",
									"constraints": {
										"allowedValues": [
											{
												"label": "No",
												"value": false
											},
											{
												"label": "Yes",
												"value": true
											}
										],
										"required": false
									},
									"visible": "[steps('imageDest').disasterRecovery.specifyRemoteGallery]"
								}
							]
						}
					]
				},
				{
					"name": "tags",
					"label": "Tags",
					"elements": [
						{
							"name": "tags",
							"type": "Microsoft.Common.TagsByResource",
							"resources": [
								"Microsoft.Resources/resourceGroups",
								"Microsoft.Compute/virtualMachines",
								"Microsoft.Compute/galleries/images",
								"Microsoft.Compute/galleries/images/versions",
								"Microsoft.Storage/storageAccounts",
								"Microsoft.Network/privateEndpoints"
							]
						}
					]
				}
			]
		},
		"outputs": {
			"kind": "Subscription",
			"location": "[steps('basics').scope.location.name]",
			"subscriptionId": "[steps('basics').scope.subscription.id]",
			"parameters": {
				"location": "[steps('basics').scope.location.name]",
				"deploymentPrefix": "[steps('basics').naming.deploymentPrefix]",
				"nameConvResTypeAtEnd": "[steps('basics').naming.nameConvResTypeAtEnd]",
				"imageBuildResourceGroupId": "[if(equals(steps('basics').resGroup.useExResGroup, true), concat(steps('basics').scope.subscription.id, '/resourceGroups/',steps('basics').resGroup.resourceGroup), '')]",
				"customBuildResourceGroupName": "[if(equals(steps('basics').resGroup.useExResGroup, false), steps('basics').resGroup.customBuildResourceGroupName, '')]",
				"computeGalleryResourceId": "[steps('prereqs').gallery.gallery.id]",
				"artifactsContainerUri": "[if(steps('prereqs').storage.enableZeroTrustStorage, concat(steps('prereqs').storage.storageAccount.blobEndpoint, steps('prereqs').storage.container), '')]",
				"userAssignedIdentityResourceId": "[if(steps('prereqs').storage.enableZeroTrustStorage, steps('prereqs').storage.userAssignedIdentity.id, '')]",
				"subnetResourceId": "[steps('prereqs').network.subnet]",
				"vmSize": "[steps('imageVm').vmProps.vmSize]",
				"encryptionAtHost": "[steps('imageVm').vmProps.encryptionAtHost]",
				"customSourceImageResourceId": "[if(equals(steps('imageVm').imageSource.source, 'gallery'), steps('imageVm').imageSource.imageDefinition.id, '')]",
				"mpPublisher": "[steps('imageVm').imageSource.publisher]",
				"mpOffer": "[steps('imageVm').imageSource.offer]",
				"mpSku": "[steps('imageVm').imageSource.sku]",
                "downloadLatestMicrosoftContent": "[steps('imageCustomizations').downloadLatestMicrosoftContent]",
                "customizations": "[if(steps('imageCustomizations').customSoftware.addCustomSoftware, steps('imageCustomizations').customSoftware.customizations, parse('[]'))]",
				"vdiCustomizations": "[if(steps('imageCustomizations').customSoftware.addVDICustomSoftware, steps('imageCustomizations').customSoftware.vdiCustomizations, parse ('[]'))]",
				"installFsLogix": "[if(or(steps('prereqs').storage.enableZeroTrustStorage, and(not(contains(steps('basics').meApi.transformed.context, 'eaglex')), not(contains(steps('basics').meApi.transformed.context, 'scloud')))), steps('imageCustomizations').fslogix.installFsLogix, false)]",
				"office365AppsToInstall": "[if(equals(steps('imageVm').imageSource.offer, 'office-365'), parse('[]'), steps('imageCustomizations').office.office365AppsToInstall)]",
				"installOneDrive": "[if(equals(steps('imageVm').imageSource.offer, 'office-365'), false, steps('imageCustomizations').office.installOneDrive)]",
				"installTeams": "[if(equals(steps('imageVm').imageSource.offer, 'office-365'), false, steps('imageCustomizations').office.installTeams)]",
				"teamsCloudType": "[if(steps('imageCustomizations').office.installTeams, steps('imageCustomizations').office.teamsCloudType, 'Commercial')]",
				"appsToRemove": "[steps('imageCustomizations').customizations.appsToRemove]",
				"installVirtualDesktopOptimizationTool": "[if(or(steps('prereqs').storage.enableZeroTrustStorage, and(not(contains(steps('basics').meApi.transformed.context, 'eaglex')), not(contains(steps('basics').meApi.transformed.context, 'scloud')))), steps('imageCustomizations').customizations.installVirtualDesktopOptimizationTool, false)]",
				"cleanupDesktop": "[steps('imageCustomizations').customizations.cleanupDesktop]",
				"installUpdates": "[steps('imageCustomizations').updates.installUpdates]",
				"updateService": "[steps('imageCustomizations').updates.updateService]",
				"wsusServer": "[if(equals(steps('imageCustomizations').updates.updateService, 'WSUS'), steps('imageCustomizations').updates.wsusServer, '')]",
				"collectCustomizationLogs": "[steps('imageCustomizations').logging.collectLogs]",
				"logStorageAccountNetworkAccess": "[if(steps('imageCustomizations').logging.collectLogs, steps('imageCustomizations').logging.networkAccess, 'PublicEndpoint')]",
				"privateEndpointSubnetResourceId": "[if(and(steps('imageCustomizations').logging.collectLogs, equals(steps('imageCustomizations').logging.networkAccess, 'PrivateEndpoint')), steps('imageCustomizations').logging.subnet, '')]",
				"blobPrivateDnsZoneResourceId": "[if(and(steps('imageCustomizations').logging.collectLogs, equals(steps('imageCustomizations').logging.networkAccess, 'PrivateEndpoint'), steps('imageCustomizations').logging.enablePrivateDNSIntegration), steps('imageCustomizations').logging.blobPrivateDnsZone, '')]",
				"imageDefinitionResourceId": "[if(equals(steps('imageDest').imageDefinition.useExImageDef, true), concat(steps('prereqs').gallery.gallery.id, '/images/', steps('imageDest').imageDefinition.imageDefinition), '')]",
				"customImageDefinitionName": "[if(equals(steps('imageDest').imageDefinition.useExImageDef, false), steps('imageDest').imageDefinition.customImageDefinitionName, '')]",
				"imageDefinitionPublisher": "[if(equals(steps('imageDest').imageDefinition.useExImageDef, false), steps('imageDest').imageDefinition.imageDefinitionPublisher, '')]",
				"imageDefinitionOffer": "[if(equals(steps('imageDest').imageDefinition.useExImageDef, false), steps('imageDest').imageDefinition.imageDefinitionOffer, '')]",
				"imageDefinitionSku": "[if(equals(steps('imageDest').imageDefinition.useExImageDef, false), steps('imageDest').imageDefinition.imageDefinitionSku, '')]",
				"imageDefinitionIsAcceleratedNetworkSupported": "[if(equals(steps('imageDest').imageDefinition.useExImageDef, false), steps('imageDest').imageDefinition.isAcceleratedNetworkSupported, false)]",
				"imageDefinitionIsHibernateSupported": "[if(equals(steps('imageDest').imageDefinition.useExImageDef, false), steps('imageDest').imageDefinition.isHibernateSupported, false)]",
				"imageDefinitionSecurityType": "[if(equals(steps('imageDest').imageDefinition.useExImageDef, false), steps('imageDest').imageDefinition.securityType, 'Standard')]",
				"imageDefinitionIsHigherStoragePerformanceSupported": "[if(equals(steps('imageDest').imageDefinition.useExImageDef, false), steps('imageDest').imageDefinition.isNVMeSupported, false)]",
				"imageMajorVersion": "[if(equals(steps('imageDest').imageVersion.useCustomVersion, true), steps('imageDest').imageVersion.imageMajorVersion, -1)]",
				"imageMinorVersion": "[if(equals(steps('imageDest').imageVersion.useCustomVersion, true), steps('imageDest').imageVersion.imageMinorVersion, -1)]",
				"imagePatch": "[if(equals(steps('imageDest').imageVersion.useCustomVersion, true), steps('imageDest').imageVersion.imagePatch, -1)]",
				"imageVersionEOLinDays": "[steps('imageDest').imageVersion.eolDaysFromNow]",
				"imageVersionExcludeFromLatest": "[steps('imageDest').imageVersion.excludeFromLatest]",
				"imageVersionDefaultReplicaCount": "[steps('imageDest').imageVersion.replicaCount]",
				"imageVersionDefaultStorageAccountType": "[steps('imageDest').imageVersion.storageAccountType]",
				"imageVersionTargetRegions": "[if(equals(steps('imageDest').imageVersion.specifyReplicationRegions, true), steps('imageDest').imageVersion.replicationRegions, parse('[]'))]",
				"remoteComputeGalleryResourceId": "[if(steps('imageDest').disasterRecovery.specifyRemoteGallery, steps('imageDest').disasterRecovery.remoteComputeGallery.id, '')]",
				"remoteImageVersionStorageAccountType": "[if(steps('imageDest').disasterRecovery.specifyRemoteGallery, steps('imageDest').disasterRecovery.storageAccountType , 'Standard_LRS')]",
				"remoteImageVersionDefaultReplicaCount": "[if(steps('imageDest').disasterRecovery.specifyRemoteGallery, steps('imageDest').disasterRecovery.replicaCount, 1)]",
				"remoteImageVersionExcludeFromLatest": "[if(steps('imageDest').disasterRecovery.specifyRemoteGallery, steps('imageDest').disasterRecovery.excludeFromLatest, false)]",
				"tags": "[steps('tags').tags]"
			}
		}
	}
}